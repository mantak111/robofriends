{"version":3,"sources":["components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundary.jsx","containers/App.jsx","index.js"],"names":["CardList","robots","Error","SearchBox","searchField","searchChange","className","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2OAsBeA,EAnBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,WCULC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,yBAAKC,UAAU,OACb,2BACEC,SAAUF,EACVC,UAAU,mCACVE,KAAK,SACLC,YAAY,oBCCLC,EARA,SAACC,GACd,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCiBFC,E,YAnBb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KACDO,MAAQ,CACXC,UAAU,GAHK,E,8EAOFC,EAAOC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,yDAEFG,KAAKX,MAAMK,a,GAhBMQ,aC+CbC,G,kBAzCb,aAAe,IAAD,8BACZ,+CAOFC,eAAiB,SAAAC,GACf,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAT9B,EAYdC,kBAAoB,WAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAAQkC,QAbzC,EAAKjB,MAAQ,CACXjB,OAAQ,GACRG,YAAa,IAJH,E,sEAkBJ,IAAD,SACyBkB,KAAKJ,MAC/BkB,GAFC,EACCnC,OADD,EACSG,YACOkB,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAAC,GAC9C,OAAOA,EAAMC,KACVC,cACAC,SAAS,EAAKvB,MAAMd,YAAYoC,mBAErC,OAAQlB,KAAKJ,MAAMjB,OAAOyC,OAGxB,yBAAKpC,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUzB,OAAQmC,OAPxB,2C,GA3BYZ,c,MCDlBmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1b9bf618.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  if(true) {\n    throw new Error('NOOOO!');\n  } \n  return (\n    <div>\n      {robots.map(robot => (\n        <Card\n          key={robot.id}\n          id={robot.id}\n          name={robot.name}\n          username={robot.username}\n          email={robot.email}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        onChange={searchChange}\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n          {props.children}\n      </div>\n  )\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componenDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\"\n    };\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }));\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchField.toLowerCase());\n    });\n    return !this.state.robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}